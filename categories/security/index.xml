<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Security on My New Hugo Site</title>
    <link>https://pavursec.com/categories/security/</link>
    <description>Recent content in Security on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Nov 2021 22:39:09 +0000</lastBuildDate>
    
	<atom:link href="https://pavursec.com/categories/security/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SATCOMS Carving Lab</title>
      <link>https://pavursec.com/blog/satcoms-carving-lab/</link>
      <pubDate>Wed, 10 Nov 2021 22:39:09 +0000</pubDate>
      
      <guid>https://pavursec.com/blog/satcoms-carving-lab/</guid>
      <description>I recently ran a series of Arsenal Lab demonstrations at Black Hat Europe 2021. These demonstrations focused on providing accessible introductions to using open source tools to interact with satellite signal recordings. Several folks asked for copies of the lab handouts used in those exercise, so I thought I&amp;rsquo;d post them here for anyone interested.
MPEG-TS Lab: mpeg_ts_handout.pdf
GSE LAB: gse_handout.pdf</description>
    </item>
    
    <item>
      <title>Eoshield</title>
      <link>https://pavursec.com/project/eoshield/</link>
      <pubDate>Mon, 03 Jun 2019 15:43:36 +0100</pubDate>
      
      <guid>https://pavursec.com/project/eoshield/</guid>
      <description>Distributed applications lack reliable means of verifying the trustworthiness of their users and blockchain users have little information regarding the trustworthiness of distributed applications. EOShield was an hackathon competition entry at the 2018 EOS Global Hackathon which demonstrated the creation of a PKI-inspired distributed trust model to reduce risk on DApp ecosystems.
The project was pitched as a business but is currently a side project which may see open-source release to the EOS community.</description>
    </item>
    
    <item>
      <title>Reverse Engineering the Amazon Dash Wand: Part 2 - Local Shenanigans</title>
      <link>https://pavursec.com/blog/dash-re-2/</link>
      <pubDate>Sun, 20 Aug 2017 20:48:51 -0400</pubDate>
      
      <guid>https://pavursec.com/blog/dash-re-2/</guid>
      <description>About the Project This is the second in a series of posts outlining my efforts to reverse engineer the new Amazon Dash Wand to understand how it works and how secure it is. Rather than just do the typical security blog writeup of exploits, I wanted to share the entire process including the numerous dead ends and false leads involved in an embedded reverse engineering effort.
You can find other posts in the series here.</description>
    </item>
    
    <item>
      <title>Reverse Engineering the Amazon Dash Wand: Part 1 - First Steps</title>
      <link>https://pavursec.com/blog/dash-re-1/</link>
      <pubDate>Mon, 14 Aug 2017 20:48:51 -0400</pubDate>
      
      <guid>https://pavursec.com/blog/dash-re-1/</guid>
      <description>About the Project I recently picked up Amazon&amp;rsquo;s new Dash Wand essentially for free due to an Amazon promotion ($20 worth of Amazon credits if you purchase the $20 device).
The device itself packs a pretty hefty amount of hardware for the cost. It includes a microphone, a linear image sensor for barcode reading, assorted LEDs, a nice big button, speakers, Bluetooth Low Energy and Wifi. It&amp;rsquo;s all powered by (replaceable) AAA batteries, can be affixed to any magnetic surface or hung from an adhesive hook it ships with, and is remarkably compact and portable.</description>
    </item>
    
    <item>
      <title>RE: Dash Wand</title>
      <link>https://pavursec.com/project/dash-wand-re/</link>
      <pubDate>Mon, 14 Aug 2017 16:11:30 -0400</pubDate>
      
      <guid>https://pavursec.com/project/dash-wand-re/</guid>
      <description>Reverse Engineering: Dash Wand The Amazon Dash Wand packs some pretty powerful hardware in a cheap and attractive package. The only downside is that the device is locked down to the point where it&amp;rsquo;s good for only one thing: making orders on Amazon. This project is about liberating the hardware, seeing how secure the wand really is, getting better control over my data, and learning a bit about IOT reverse-engineering.</description>
    </item>
    
    <item>
      <title>Hackathons vs. CTFs</title>
      <link>https://pavursec.com/blog/hackathons-vs-ctfs/</link>
      <pubDate>Sat, 29 Jul 2017 03:57:17 -0400</pubDate>
      
      <guid>https://pavursec.com/blog/hackathons-vs-ctfs/</guid>
      <description>One piece of advice I give to people looking to transition from computer science homework assignments to meaningful proficiency in cybersecurity is to seek out Hackathons and Capture-the-Flag competitions.
Sometimes the amount of information on these events can seem overwhelming and it can be difficult for someone starting out to know which events are worthwhile and how to best make use of opportunities. After attending a number of these competitions myself, I wanted to share some of the advice I wish someone had given me.</description>
    </item>
    
    <item>
      <title>5 Security Concerns When Using Static Site Generators</title>
      <link>https://pavursec.com/blog/static-security/</link>
      <pubDate>Thu, 20 Jul 2017 20:05:37 -0400</pubDate>
      
      <guid>https://pavursec.com/blog/static-security/</guid>
      <description>Static == Secure Right? If you&amp;rsquo;ve read my recent post extolling the virtues of static site generators for secure web development you might think that deploying a static site makes you more or less invulnerable to cyber adversaries. Although it&amp;rsquo;s true that going static dramatically reduces your vulnerability profile, it doesn&amp;rsquo;t quite eliminate it.
This post considers five possible attack vectors against websites built with static generators (e.g. Jekyl, Hugo, etc.</description>
    </item>
    
    <item>
      <title>Static Sites: The Ideal Security Blogging Platform</title>
      <link>https://pavursec.com/blog/why-static/</link>
      <pubDate>Thu, 20 Jul 2017 15:03:11 -0400</pubDate>
      
      <guid>https://pavursec.com/blog/why-static/</guid>
      <description>Juggling Priorities It should come as no surprise that, when building this site, my first concern was security. This arose partially from the fact that I live and breathe cybersecurity and believe (not without cause) that the whole internet is out to get me. However, it&amp;rsquo;s also true that sites focused on cyber issues tend to present attractive targets to hackers attempting to prove their skills and gain some renown with people who might actually appreciate their accomplishments.</description>
    </item>
    
    <item>
      <title>Pi Guard</title>
      <link>https://pavursec.com/project/pi-guard/</link>
      <pubDate>Thu, 20 Jul 2017 11:16:39 -0400</pubDate>
      
      <guid>https://pavursec.com/project/pi-guard/</guid>
      <description>Pi Guard Pi Guard was a hackathon project focused on filling the gap between consumer security options for personal computers and comparable offerings for embedded and internet of things products.
The device hosts a simple web application which acts as a wrapper for a number of automated scans that take place on the local IP range. The automated scans are designed to be modular and flexible so that multiple &amp;lsquo;plugins&amp;rsquo; might be written for the platform and the UI is oriented towards non-technical users.</description>
    </item>
    
    <item>
      <title>Pi Spy</title>
      <link>https://pavursec.com/project/pi-spy/</link>
      <pubDate>Thu, 20 Jul 2017 10:49:13 -0400</pubDate>
      
      <guid>https://pavursec.com/project/pi-spy/</guid>
      <description>Pi Spy Pi spy was an entry my hackathon team made with the goal of demonstrating a novel attack vector against unencrypted network traffic.
The project revolved around a malicious NIC installation that included a raspberry-pi running tcpdump and a passive network tap that intercepted all traffic from the desktop&amp;rsquo;s ethernet port.
By powering the raspberry-pi off of the Molex adapters from the PC&amp;rsquo;s PSU we were able to ensure that the pi ran continuously whenever the PC was turned on.</description>
    </item>
    
  </channel>
</rss>